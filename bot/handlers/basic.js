const UsersRepository = require("../../repositories/usersRepository");
const TextGenerators = require("../../services/textGenerators");
const UsersHelper = require("../../services/usersHelper");
const Commands = require("../../resources/commands");
const CoinsHelper = require("../../resources/coins/coins");
const BaseHandlers = require("./base");

class BasicHandlers extends BaseHandlers {
  constructor() {
    super();
  }

  helpHandler = (msg) => {
    this.bot.sendMessage(
      msg.chat.id,
      `[–Ø –Ω–∞—Ö–æ–∂—É—Å—å –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ, —Ç—ã –º–æ–∂–µ—à—å –ø–æ—É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –º–æ–µ–º —Ä–∞–∑–≤–∏—Ç–∏–∏ –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏ –Ω–∞ –≥–∏—Ç—Ö–∞–±–µ —Å–ø–µ–π—Å–∞].\n
–î–µ—Ä–∂–∏ –º–æ–π —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥:\n` +
        UsersHelper.getAvailableCommands(msg.from.username) +
        `${Commands.GlobalModifiers}`
    );
  };

  aboutHandler = (msg) => {
    this.bot.sendMessage(
      msg.chat.id,
      `üè´ Hacker Embassy (–ï—Ä–µ–≤–∞–Ω—Å–∫–∏–π –•–∞–∫–µ—Ä—Å–ø–µ–π—Å) - —ç—Ç–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ, –≥–¥–µ —Å–æ–±–∏—Ä–∞—é—Ç—Å—è –µ–¥–∏–Ω–æ–º—ã—à–ª–µ–Ω–Ω–∏–∫–∏, —É–≤–ª–µ—á–µ–Ω–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è–º–∏ –∏ —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–æ–º. –ú—ã –≤–º–µ—Å—Ç–µ —Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–¥ –ø—Ä–æ–µ–∫—Ç–∞–º–∏, –¥–µ–ª–∏–º—Å—è –∏–¥–µ—è–º–∏ –∏ –∑–Ω–∞–Ω–∏—è–º–∏, –ø—Ä–æ—Å—Ç–æ –æ–±—â–∞–µ–º—Å—è.
      
üíª –¢—ã –º–æ–∂–µ—à—å –ø–æ—á–∏—Ç–∞—Ç—å –æ –Ω–∞—Å –ø–æ–¥—Ä–æ–±–Ω–µ–µ –Ω–∞ –Ω–∞—à–µ–º —Å–∞–π—Ç–µ https://hackerembassy.site/

üìì –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞—à–∏—Ö –ø—Ä–æ–µ–∫—Ç–∞—Ö, –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–∏ –∏ –ø—Ä–∞–≤–∏–ª–∞—Ö –º—ã —Ö—Ä–∞–Ω–∏–º –Ω–∞ –Ω–∞—à–µ–π –≤–∏–∫–∏ https://wiki.hackerembassy.site/

ü§ñ –ú–æ–π –∫–æ–¥ –æ—Ç–∫—Ä—ã—Ç –∏ —Å–≤–æ–±–æ–¥–µ–Ω, —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –≤–µ–¥—ë—Ç—Å—è –Ω–∞ –≥–∏—Ç—Ö–∞–±–µ: https://github.com/hackerembassy/hackerembassy-tg-bot 

üçï –ú—ã –≤—Å–µ–≥–¥–∞ —Ä–∞–¥—ã –Ω–æ–≤—ã–º —Ä–µ–∑–∏–¥–µ–Ω—Ç–∞–º. –•–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å, –∫–∞–∫ —Å—Ç–∞—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–º? –ñ–º–∏ –∫–æ–º–∞–Ω–¥—É /join`
    );
  };

  joinHandler = (msg) => {
    let message = TextGenerators.getJoinText();
    this.bot.sendMessage(msg.chat.id, message);
  };

  issueHandler = async (msg, issueText) => {
    const helpMessage = `üìÆ –° –ø–æ–º–æ—â—å—é —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã –º–æ–∂–Ω–æ –∞–Ω–æ–Ω–∏–º–Ω–æ —Å–æ–æ–±—â–∏—Ç—å –æ –∫–∞–∫–æ–π-–ª–∏–±–æ –ø—Ä–æ–±–ª–µ–º–µ –≤ —Å–ø–µ–π—Å–µ (—á–µ–≥–æ-—Ç–æ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç, —á—Ç–æ-—Ç–æ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –∫—Ç–æ-—Ç–æ –¥–µ–ª–∞–µ—Ç —á—Ç–æ-—Ç–æ –æ—á–µ–Ω—å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –≤ —Å–ø–µ–π—Å–µ).
–†–µ–∑–∏–¥–µ–Ω—Ç—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –µ—ë —Ä–∞—Å—Å–º–æ—Ç—Ä—è—Ç –∏ –ø–æ—Å—Ç–∞—Ä–∞—é—Ç—Å—è —Ä–µ—à–∏—Ç—å.
–û—Ç–ø—Ä–∞–≤–∏—Ç—å –±–æ—Ç—É –ø—Ä–æ–±–ª–µ–º—É –º–æ–∂–Ω–æ, –Ω–∞–ø—Ä–∏–º–µ—Ä, –≤–æ—Ç —Ç–∞–∫:

#\`/issue –ü–ª–æ—Ö–æ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä –∏ –Ω–∞ –ø–µ—Ä–≤–æ–º —ç—Ç–∞–∂–µ –æ—á–µ–Ω—å –∂–∞—Ä–∫–æ#\`
#\`/issue –ó–∞–∫–æ–Ω—á–∏–ª–∞—Å—å —Ç—É–∞–ª–µ—Ç–Ω–∞—è –±—É–º–∞–≥–∞#\`
#\`/issue –ù–µ–ø–ª–æ—Ö–æ –±—ã–ª–æ –±—ã –∏–º–µ—Ç—å –∫–∞—Ä—Ç—É –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π —Å–µ—Ç–∏ –Ω–∞ –≤–∏–∫–∏#\``
    let message = `üíå –ü—Ä–æ–±–ª–µ–º–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ —Ä–µ–∑–∏–¥–µ–Ω—Ç–∞–º, –æ–Ω–∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –µ—ë —Ä–∞—Å—Å–º–æ—Ç—Ä—è—Ç. –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–º–æ—â—å –Ω–∞—à–µ–º—É —Å–æ–æ–±—â–µ—Å—Ç–≤—É.`;
    let report = `üì© –£ –≤–∞—Å –Ω–æ–≤–∞—è –ø—Ä–æ–±–ª–µ–º–∞!
"${issueText}"`;
    if (issueText !== undefined){
      await this.bot.sendMessage(msg.chat.id, message);
      await this.bot.sendMessage(this.botConfig.chats.key, report);
    } else {
      await this.bot.sendMessage(msg.chat.id, helpMessage);
    }
  };

  donateHandler = (msg) => {
    let accountants = UsersRepository.getUsersByRole("accountant");
    let message = TextGenerators.getDonateText(accountants);
    this.bot.sendMessage(msg.chat.id, message);
  };

  locationHandler = (msg) => {
    let message = `üó∫ –ù–∞—à –∞–¥—Ä–µ—Å: –ê—Ä–º–µ–Ω–∏—è, –ï—Ä–µ–≤–∞–Ω, –ü—É—à–∫–∏–Ω–∞ 38/18 (–≤—Ö–æ–¥ —Å–æ –¥–≤–æ—Ä–∞)`;
    this.bot.sendMessage(msg.chat.id, message);
    this.bot.sendLocation(msg.chat.id, 40.18258, 44.51338);
    this.bot.sendPhoto(msg.chat.id, "./resources/images/house.jpg", {
      caption: `üè´ –í–æ—Ç —ç—Ç–æ—Ç –¥–æ–º–∏–∫, –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π –≤ —Å–≤–æ–µ–º —Ä–æ–¥–µ`,
    });
  };

  donateCoinHandler = async (msg, coinname) => {
    coinname = coinname.toLowerCase();
    let buffer = await CoinsHelper.getQR(coinname);
    let coin = CoinsHelper.getCoinDefinition(coinname);

    this.bot.sendPhoto(msg.chat.id, buffer, {
      parse_mode: "Markdown",
      caption: `ü™ô –ò—Å–ø–æ–ª—å–∑—É–π —ç—Ç–æ—Ç QR –∫–æ–¥ –∏–ª–∏ –∞–¥—Ä–µ—Å –Ω–∏–∂–µ, —á—Ç–æ–±—ã –∑–∞–¥–æ–Ω–∞—Ç–∏—Ç—å –Ω–∞–º –≤ ${coin.fullname}.
      
‚ö†Ô∏è –û–±—Ä–∞—Ç–∏ –≤–Ω–∏–º–∞–Ω–∏–µ, —á—Ç–æ —Å–µ—Ç—å ${coin.network} –∏ —Ç—ã –∏—Å–ø–æ–ª—å–∑—É–µ—à—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∞–¥—Ä–µ—Å:
\`${coin.address}\`
      
‚ö†Ô∏è –ö–æ—à–µ–ª—å–∫–∏ –ø–æ–∫–∞ —Ä–∞–±–æ—Ç–∞—é—Ç –≤ —Ç–µ—Å—Ç–æ–≤–æ–º —Ä–µ–∂–∏–º–µ, –ø—Ä–µ–∂–¥–µ —á–µ–º —Å–ª–∞—Ç—å –±–æ–ª—å—à—É—é —Å—É–º–º—É, –ø–æ–ø—Ä–æ–±—É–π —á—Ç–æ-–Ω–∏–±—É–¥—å —Å–æ–≤—Å–µ–º –º–∞–ª–µ–Ω—å–∫–æ–µ –∏–ª–∏ –Ω–∞–ø–∏—à–∏ –±—É—Ö–≥–∞–ª—Ç–µ—Ä—É
      
üíå –ù–µ –∑–∞–±—É–¥—å –Ω–∞–ø–∏—Å–∞—Ç—å –±—É—Ö–≥–∞–ª—Ç–µ—Ä—É, —á—Ç–æ —Ç—ã –∑–∞–¥–æ–Ω–∞—Ç–∏–ª(–ª–∞/–ª–æ) –∏ —Å–∫–∏–Ω—É—Ç—å –∫–æ–¥ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –∏–ª–∏ —Å—Å—ã–ª–∫—É
–≤ https://mempool.space/ –∏–ª–∏ –∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ–º —Å–µ—Ä–≤–∏—Å–µ
      
üõç –ï—Å–ª–∏ —Ö–æ—á–µ—à—å –∑–∞–¥–æ–Ω–∞—Ç–∏—Ç—å –Ω–∞—Ç—É—Ä–æ–π (ohh my) –∏–ª–∏ –¥—Ä—É–≥–∏–º —Å–ø–æ—Å–æ–±–æ–º - –∂–º–∏ /donate`,
    });
  };

  donateCardHandler = async (msg) => {
    let accountants = UsersRepository.getUsersByRole("accountant");
    let accountantsList = TextGenerators.getAccountsList(accountants);

    this.bot.sendMessage(
      msg.chat.id,
      `üíå –î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –∑–∞–¥–æ–Ω–∞—Ç–∏—Ç—å —ç—Ç–∏–º —Å–ø–æ—Å–æ–±–æ–º, –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞—à–∏–º –±—É—Ö–≥–∞–ª—Ç–µ—Ä–∞–º. –û–Ω–∏ –ø–æ–¥—Å–∫–∞–∂—É—Ç –≤–∞–º —Ç–µ–∫—É—â–∏–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –∏–ª–∏ –≤—ã —Å–º–æ–∂–µ—Ç–µ –¥–æ–≥–æ–≤–æ—Ä–∏—Ç—å—Å—è –æ –≤—Ä–µ–º–µ–Ω–∏ –∏ –º–µ—Å—Ç–µ –ø–µ—Ä–µ–¥–∞—á–∏. 
      
–í–æ—Ç –æ–Ω–∏, —Å–ª–µ–≤–∞ –Ω–∞–ø—Ä–∞–≤–æ:
      ${accountantsList}
üõç –ï—Å–ª–∏ —Ö–æ—á–µ—à—å –∑–∞–¥–æ–Ω–∞—Ç–∏—Ç—å –Ω–∞—Ç—É—Ä–æ–π –∏–ª–∏ –¥—Ä—É–≥–∏–º —Å–ø–æ—Å–æ–±–æ–º - –∂–º–∏ /donate`
    );
  };

  getResidentsHandler = (msg) => {
    let users = UsersRepository.getUsers().filter((u) => UsersHelper.hasRole(u.username, "member"));
    let message = TextGenerators.getResidentsList(users);

    this.bot.sendLongMessage(msg.chat.id, message);
  };

  startPanelHandler = async (msg, edit = false) => {
    let message = `üá¨üáß –ü—Ä–∏–≤–µ—Ç —Ö–∞–∫–µ—Ä—á–∞–Ω–∏–Ω. –Ø –±–æ—Ç –¥–ª—è –º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç–∞ –≤—Å—è–∫–∏—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –≤ —Å–ø–µ–π—Å–µ. 
[–Ø –Ω–∞—Ö–æ–∂—É—Å—å –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ, —Ç—ã –º–æ–∂–µ—à—å –ø–æ—É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –º–æ–µ–º —Ä–∞–∑–≤–∏—Ç–∏–∏ –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏ –Ω–∞ –≥–∏—Ç—Ö–∞–±–µ —Å–ø–µ–π—Å–∞, –æ–±—Ä–∞—â–∞–π—Å—è –∫ #[korn9509#]#(t.me/korn9509#)].

üîñ –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ç–µ–±–µ –≤–≤–æ–¥–∏ /help. –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –∫–æ–º–∞–Ω–¥—ã –≤–∏–¥–Ω—ã —Ç–æ–ª—å–∫–æ —Ä–µ–∑–∏–¥–µ–Ω—Ç–∞–º.
üìÆ –ß—Ç–æ-—Ç–æ –≤ —Å–ø–µ–π—Å–µ –Ω–µ —Ç–∞–∫? –í–≤–æ–¥–∏ –≤ –±–æ—Ç–µ /issue. –≠—Ç–æ –∞–Ω–æ–Ω–∏–º–Ω–æ.
`;

    let inlineKeyboard = [
      [
        {
          text: "üìØ –°—Ç–∞—Ç—É—Å",
          callback_data: JSON.stringify({ command: "/status" }),
        },
        {
          text: "üí∏ –°–±–æ—Ä—ã",
          callback_data: JSON.stringify({ command: "/funds" }),
        },
      ],
      [
        {
          text: "üïπ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ",
          callback_data: JSON.stringify({ command: "/controlpanel" }),
        },
        {
          text: "üìö –ò–Ω—Ñ–∞",
          callback_data: JSON.stringify({ command: "/infopanel" }),
        },
      ],
      [
        {
          text: "üéâ –î–Ω–∏ —Ä–æ–∂–¥–µ–Ω–∏—è",
          callback_data: JSON.stringify({ command: "/birthdays" }),
        },
        {
          text: "üõç –ù—É–∂–¥—ã",
          callback_data: JSON.stringify({ command: "/needs" }),
        },
      ],
      [
        {
          text: "üñ® 3D –ü—Ä–∏–Ω—Ç–µ—Ä—ã",
          callback_data: JSON.stringify({ command: "/printers" }),
        },
        {
          text: "üìù –ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞",
          callback_data: JSON.stringify({ command: "/help" }),
        },
      ],
    ];

    if (edit) {
      try {
        await this.bot.editMessageText(message, {
          chat_id: msg.chat.id,
          message_id: msg.message_id,
          reply_markup: {
            inline_keyboard: inlineKeyboard,
          },
        });
      } catch {
        // Message was not modified
      }
    } else {
      await this.bot.sendMessage(msg.chat.id, message, {
        reply_markup: {
          inline_keyboard: inlineKeyboard,
        },
      });
    }
  };

  controlPanelHandler = async (msg, edit = false) => {
    if (!UsersHelper.hasRole(msg.from.username, "admin", "member")) return;

    let message = "üïπ –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–ø–µ–π—Å–æ–º –¥–ª—è —Ä–µ–∑–∏–¥–µ–Ω—Ç–æ–≤";

    let inlineKeyboard = [
      [
        {
          text: "üîë –ó–∞–º–æ–∫",
          callback_data: JSON.stringify({ command: "/unlock" }),
        },
        {
          text: "üîî –ó–≤–æ–Ω–æ–∫",
          callback_data: JSON.stringify({ command: "/doorbell" }),
        },
      ],
      [
        {
          text: "üìπ I —ç—Ç–∞–∂",
          callback_data: JSON.stringify({ command: "/webcam" }),
        },
        {
          text: "üìπ II —ç—Ç–∞–∂",
          callback_data: JSON.stringify({ command: "/webcam2" }),
        },
        {
          text: "üìπ –í—Ö–æ–¥",
          callback_data: JSON.stringify({ command: "/doorcam" }),
        },
      ],
      [
        {
          text: "ü©ª –°—É–ø–µ—Ä—Å—Ç–∞—Ç—É—Å",
          callback_data: JSON.stringify({ command: "/superstatus" }),
        },
      ],
      [
        {
          text: "‚Ü©Ô∏è –ù–∞–∑–∞–¥",
          callback_data: JSON.stringify({ command: "/startpanel" }),
        },
      ],
    ];

    if (edit) {
      try {
        await this.bot.editMessageText(message, {
          chat_id: msg.chat.id,
          message_id: msg.message_id,
          reply_markup: {
            inline_keyboard: inlineKeyboard,
          },
        });
      } catch {
        // Message was not modified
      }
    } else {
      await this.bot.sendMessage(msg.chat.id, message, {
        reply_markup: {
          inline_keyboard: inlineKeyboard,
        },
      });
    }
  };

  infoPanelHandler = async (msg, edit = false) => {
    let message = `üìö –¢—É—Ç –º–æ–∂–Ω–æ –ø–æ—á–∏—Ç–∞—Ç—å –æ –Ω–∞—Å.
–ï—Å–ª–∏ —Ö–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å –ø–æ–±–æ–ª—å—à–µ, –Ω–µ —Å—Ç–µ—Å–Ω—è–π—Å—è, –∑–∞—Ö–æ–¥–∏ –Ω–∞ –Ω–∞—à —Å–∞–π—Ç –∏ –≤–∏–∫–∏ https://hackerembassy.site/`;

    let inlineKeyboard = [
      [
        {
          text: "üè† –û —Å–ø–µ–π—Å–µ –∏ –±–æ—Ç–µ",
          callback_data: JSON.stringify({ command: "/about" }),
        },
        {
          text: "üôã‚Äç‚ôÄÔ∏è –ö–∞–∫ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è",
          callback_data: JSON.stringify({ command: "/join" }),
        },
      ],
      [
        {
          text: "üó∫ –ö–∞–∫ –Ω–∞–π—Ç–∏",
          callback_data: JSON.stringify({ command: "/location" }),
        },
        {
          text: "üéÅ –ö–∞–∫ –∑–∞–¥–æ–Ω–∞—Ç–∏—Ç—å",
          callback_data: JSON.stringify({ command: "/donate" }),
        },
      ],
      [
        {
          text: "üë©‚Äçüíª –ù–∞—à–∏ —Ä–µ–∑–∏–¥–µ–Ω—Ç—ã",
          callback_data: JSON.stringify({ command: "/getresidents" }),
        },
        {
          text: "‚Ü©Ô∏è –ù–∞–∑–∞–¥",
          callback_data: JSON.stringify({ command: "/startpanel" }),
        },
      ],
    ];

    if (edit) {
      try {
        await this.bot.editMessageText(message, {
          chat_id: msg.chat.id,
          message_id: msg.message_id,
          reply_markup: {
            inline_keyboard: inlineKeyboard,
          },
        });
      } catch {
        // Message was not modified
      }
    } else {
      await this.bot.sendMessage(msg.chat.id, message, {
        reply_markup: {
          inline_keyboard: inlineKeyboard,
        },
      });
    }
  };
}

module.exports = BasicHandlers;
