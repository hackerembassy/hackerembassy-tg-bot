- name: docker updated
  import_role:
    name: external_apt_package
  vars:
    apt_repo_gpg_key_url: "https://download.docker.com/linux/ubuntu/gpg"
    apt_repo_gpg_key_name: "docker-archive-keyring.gpg"
    apt_repo_gpg_key_checksum: "sha256:1500c1f56fa9e26b9b8f42452a553675796ade0807cdce11975eb98170b3a570"  # wget -qO- https://download.docker.com/linux/ubuntu/gpg | sha256sum
    apt_repo_source: "deb [arch=amd64 signed-by={{ apt_repo_gpg_key_target_path }}] https://download.docker.com/{{ ansible_system | lower }}/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable"
    apt_packages: docker-ce
  when: not skip_docker_install is defined or not skip_docker_install

- block:
    - name: docker daemon config is up to date
      template:
        src: daemon.json.j2
        dest: /etc/docker/daemon.json
      notify: restart docker

    - name: users are added to docker group
      user:
        name: '{{ item.name }}'
        groups: docker
        append: yes
      with_items: '{{ linux_users }}'
      loop_control:
        label: '{{ item.name }}'

    - name: pip packages for docker
      pip:
        name: 
          - docker
          - docker-compose
        state: latest
  become: yes

- name: logged into private registries
  docker_login:
    registry_url: "{{ item.registry_url }}"
    username: "{{ item.username }}"
    password: "{{ item.password }}"
  with_items: "{{ docker_login }}"
  loop_control:
    label: "{{ item.registry_url }}"
  when: docker_login is defined
